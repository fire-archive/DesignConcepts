== Level 11: Design Project Overview [[level-11]]

_Originally posted August 3, 2009_

You made a game on the first day of this course. It took you all of 15 minutes. It probably wasn’t very good. At this point, with your current understanding of flow states, feedback loops and kinds of decisions, you can probably isolate the reasons _why_ it wasn’t very good.

You made a few other games after that one. You might be proud of some of them, and embarrassed of others. Looking back, you might find one that you _were_ proud of that you now realize could have been better. Or maybe not.

At any rate, you know how to make games.

So, let’s make a _good_ game. You have all the knowledge and theory you need.

We will spend the next month making a game. If you’re a student, that may sound like an incredibly long time to you, and you will be surprised at how fast it flies by. If you’re a little more experienced, it may sound like an unreasonably _short_ time, but I promise you will manage. Do not fear; we will take things one step at a time, through the entire process. You will not have to complete everything all at once. (Nor should you. That is not how games are made.)

=== Readings

Read the following:

-   _Challenges for Game Designers_, Chapter 11 (Targeting a Market). We have discussed the importance designing for the player (as opposed to the designer) earlier in this course. This chapter goes into more detail, giving some considerations when designing a game for target-demographic or mass-market appeal.

=== Design Project: an Overview

In my classroom courses, I call this a *portfolio project* – a game that will ultimately go into the student’s game design portfolio as a way of showing their skill at game design. You may consider doing this as well, depending on your situation and your career goals.

The purpose of the Design Project is to gain some experience in taking a game through the entire process from concept to completion. Because of this, *do not* simply start with an existing design (such as an earlier game you created in this course, or an idea you’ve had floating around in your head for awhile). You have plenty of time – the entire rest of your life! – to take your existing projects further. For now, get some practice at _all_ of the stages of designing a game.

=== The Process

As you might guess from the syllabus, the process we will follow is going to go something like this:

-   First, generate some core ideas for games. These do not have to be fleshed out in any meaningful way, they are just "seeds" that can serve as starting points. You will choose one to serve as the basis for your Design Project.
-   Next, you will create the core mechanics of the game. The game does not yet have to be complete with all details fleshed out, but it does have to be at the point where you can start playing it with yourself (even if you have to make up a lot of the rules as you go along). You’ll play your own game in private, working on it until the point where you have a complete set of rules.
-   After that you will bring in some close friends, family, confidantes, or other participants of this course. Share your project with them, play the game with them, and get feedback. The key here is to figure out if the core of the game is fun at all (if it is not, you can start over with one of your other ideas or else modify your current one and try again). If it doesn’t start out feeling like there is some magical fun quality to the play, that feeling is unlikely to materialize later – it is far better to abandon an idea early and try again than to waste a large amount of time on something that is just not going to work. Ideas are cheap, implementation is expensive; act accordingly.
-   When you have the core of the game working and it is meeting its design goals, it will be time to get into the details. Make sure the game can be played to completion, without the designer being present to answer questions or make on-the-fly rulings. Get to the point where the game has a complete set of rules, with no dead-ends or holes that cause the game to stop when the players can’t figure out what happens next. You’ll playtest with new players who have not seen the game before, and observe them from a distance to see what they do.
-   Once you are confident that your game is solid, you’ll explore "blindtesting" – a playtest where you are not present at all. You’ll give your game to some other people who will agree to test it and provide feedback. This most closely simulates actual market conditions, where a person buying a game does not have direct contact with the game’s designer, and they must figure out how to play it for themselves.
-   After all of the details are complete in your game, it is time to tweak the small things. Make sure the game is balanced – that is, that there are no strategy exploits that are too powerful, and that all players feel like they have a reasonable chance of success.
-   Lastly, as the game nears completion and the mechanics become solidified, you’ll consider the "user interface" of your game – the visual design of the physical components that will make the game as pleasant, easy to learn and easy to play as possible.
-   Once everything is set, you’ll spend a short amount of time on the craft of the physical components, making the artwork and assembling the components in their final form.

Keep in mind that game design is an iterative process, and that at any point in the process you may find a reason to return to earlier steps to redo something. This is fine, and it is to be expected. This is also the reason why it is better to kill an idea early than to abandon it late. If you find that you have to start over from scratch, you’ll have more time remaining if you start over in the first week (as opposed to restarting the project in the _last_ week).

=== Idea Generation

Recall from Level 4 that there are many ways to start conceiving of ideas. Start with core aesthetics, or a core mechanic. Start with materials from other sources. Start with a narrative. And so on.

Today, start generating some ideas. Look in the world around you. What systems do you see that would make great games? Carry a notebook with you wherever you go in the next few days, and write down every idea that occurs to you, no matter how silly it may seem.

The more you generate ideas, the easier it gets.

=== Design Project Constraints

I could leave this entire project open-ended, but in order to get you started I’m going to give you some constraints. Remember, constraints are your friends.

image:SkiingSymbols/greencircle.gif[alt="GreenCircle",float="left"] *If you’ve never designed a complete game before this course, follow this set of constraints.* Create a board game, card game, or tile-laying game (that is, it must either have a board, cards, or tiles as physical components). It may have more than one of these components, and it may involve additional components beyond these (such as dice or pawns). You may choose any theme you want, as long as it is original – do not use an existing IP (intellectual property). In short, if your work would violate someone else’s trademark or copyright, don’t do it. You will undoubtedly work with other people’s IP at various points in your own career; take the opportunity now to do something original with _your own_ IP.

I’m going to place two more restrictions to help you. First, you *may not* make a trivia game, or any other game that relies on large amounts of content (such as _Trivial Pursuit_, _Pictionary_, _Apples to Apples_, or _Cranium_). This is purely for the purpose of keeping your scope limited; if you have to generate 250 cards with unique trivia questions on them, it will leave you far less time for playtesting the game mechanics. I would put Trading Card Games (like _Magic: the Gathering_ and _Pokemon TCG_) in this category as well, since it requires so much time to create a large number of cards.

Second, you *may not* use "roll-and-move" mechanics in any form. Do not throw dice and then move a pawn around the track. Do not use a spinner or a teetotum or card draws or any other random-number-generating device to determine what a player does on their turn. There are several reasons for this prohibition. First, the mechanic is highly overused, and it is practically impossible for you to make a game that will not feel like a clone of _Monopoly_, _Trouble_, _Sorry!_, _Chutes & Ladders_, or any of the other myriad games that rely on this as their core mechanic. Second, the mechanic essentially makes the key decision each turn for the player, so the _game_ is making interesting decisions but the _player_ is not. By divorcing player intentionality from the game’s outcome, you usually end up with a game that is not particularly fun to play (no matter how fun it is to design).

image:SkiingSymbols/bluesquare.gif[alt="BlueSquare",float="left"] *If you have designed one or more complete games before but still do not feel like you are a strong game designer, follow this set of constraints.* Follow all of the Green Circle constraints above. In addition, add one of the following constraints. This is your choice, based entirely on your area of interest within game design:

-   Design your game such that it has a strong embedded narrative that is interactive in some way. You will have to think of ways to tell a story through the player actions of a board game, and how to integrate narrative and game mechanics. If you are interested primarily in RPGs or other forms of storytelling, do this.
-   Create a purely cooperative board game for two or more players, so that everyone wins or loses as a team. This is challenging for several reasons. The game must provide systems that are the opposition, since the players do not provide opposition to each other. Cooperative games generally have a problem where a single skilled player can direct all of the other players (since everyone is cooperating, after all), leading to an MDA Aesthetic where most of the players are bored because they are just being told what to do by another player. If you are interested in the social dynamics of games, choose this.
-   Make a two-player head-to-head game with _asymmetry_: the players start with unequal resources, positions, capabilities, and so on… and yet they are balanced even though they are quite different. These games are not so hard to design the core rules for, but they are very difficult to balance. If you are interested in the technical and mathematical side of game design and game balance, try this.
-   Create a game to teach any topic that is normally taught at the high school (pre-college) level. It is up to you whether to teach a narrow, specific fact or a broad concept. The challenge here, of course, is to start with a fun game and not have the focus on education get in the way of that. If you’re interested in "serious games" (games that have a purpose other than pure entertainment), then do this project.

image:SkiingSymbols/blackdiamond.gif[alt="BlackDiamond",float="left"] *If you have designed multiple games professionally and you consider yourself highly experienced, follow this set of constraints.* Ignore everything above. You must create a board game that uses a "roll-and-move" mechanic as the primary gameplay activity. *But make it good.*

This mechanic is highly overused in games. It also creates a separation between the player’s decisions and the actions that the player takes on the board. It is therefore extremely challenging to design a game that uses this mechanic in a way that feels fresh, original, and compelling. But I’m sure if you have reached this point in your career, you are up to the challenge.

=== What If I Don’t Want To Make a Board Game?

Some of you expressed a strong interest in board games and are excited to get started. Don’t let me keep you. Realize that you are in the lucky minority.

Some of you are still more interested in making video games. I’ll remind you that the vast majority of your time making a video game will be spent creating art assets and writing programming code, and if you want to learn _game design_ then you should choose an activity where the bulk of your time is spent _designing the game_. The principles and concepts of game design are mostly the same, whether you work in cardboard or code, so if you’ve got the skills to design video games you should be able to use those same skills to make a board game.

Some of you expressed interest in creating tabletop role-playing games. I’ll remind you that evaluating the design of an RPG is tricky, since a sufficiently skilled GM and players can salvage a weak system (or, sufficiently inexperienced players can ruin a perfectly good system). This will make playtesting far more difficult to evaluate, so you will find it useful to practice on a board game project first. Note that the line between board game and RPG has blurred in the past few years, given narrative-heavy board games like _Android_ and mechanics-heavy RPGs like _D&D 4th Edition_.

Some of you might have additional real-world constraints. You might be on a budget, and so you can’t spend more than a certain amount of money on your prototype. You might live in a remote location where prototyping materials are scarce, and you’ll have to make do with what you have. You might have less time than usual to devote to your project, in which case you’ll need to design a game that has a short play time (so that you can playtest and iterate more frequently in less time). If you have constraints from your life that affect this project, consider those to be part of the project. A designer should not complain that they lack the resources to make the game they want; rather, they should find a way to make the _best game possible_ with the resources they have.

=== Homeplay

I ask three things of you:

-   Start generating ideas for your Design Project now, based on the constraints above. As I mentioned earlier, keep them in a notebook or some other place where they will not get lost, and that you keep with you constantly so that you can write down your ideas as you think of them.
-   By *Wednesday, August 5, noon GMT*: look over your ideas and post your three favorites on the http://gamedesignconcepts.aceboard.com/[forum]. Note that this is a day earlier than usual, in order to give time for feedback.
-   By *Thursday, August 6, noon GMT*: read the posts of two other people at your same skill level, and provide constructive comments on their ideas. If you posted in Blue Square or Black Diamond, also critique three others at a skill level below yours. *If you see posts with no responses, reply to those first, so that everyone can have at least some feedback.*

You may also use Twitter (with the #GDCU tag) to ask for immediate feedback of ideas as they occur to you.